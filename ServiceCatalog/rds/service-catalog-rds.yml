AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Description: "AWS CloudFormation Sample Template for creating an Amazon RDS DB instance:"

Parameters:
  DBInstanceID:
    Default: mydbinstance
    Description: My database instance
    Type: String
    MinLength: "1"
    MaxLength: "63"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
      consecutive hyphens.
  DBName:
    Default: myrdsdb
    Description: My database
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBInstanceClass:
    Default: db.t3.micro
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.
  DBEngineVersion:
    Default: "8.0.33"
    Description: Version of the DB Engine
    Type: String
  DBEngineType:
    Default: MySQL
    Description: DB Instance Model
    Type: String
  DBAllocatedStorage:
    Default: "50"
    Description: The size of the database (GiB)
    Type: Number
    MinValue: "20"
    MaxValue: "65536"
    ConstraintDescription: must be between 20 and 65536 GiB.
  DBUsername:
    NoEcho: "true"
    Description: Username for MySQL database access
    Type: String
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: "true"
    Description: Password MySQL database access
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  DBSgName:
    Description: The Name of an existing security group
    Type: "List<AWS::EC2::SecurityGroup::GroupName>"
  DBSubnetIDs:
    Description: select atlease three CIDR blocks
    Type: List<AWS::EC2::Subnet::Id>
    ConstraintDescription: Must be a list of valid Subnet IDs.
  DBSubGroupDescription:
    Description: write subnet group description
    Type: String
    Default: "Subnet group for MySql appname"
  environment1:
    Description: Db Subnet group tag
    Type: String
    Default: uat
  PublicAccess:
    Description: Whether the DB instance is public.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref DBSubGroupDescription
      SubnetIds: !Ref DBSubnetIDs

      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-DbSubnets"
        - Key: "environment"
          Value: !Ref environment1
  MyDB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceID
      DBName: !Ref DBName
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      Engine: !Ref DBEngineType
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Ref DBUsername
      PubliclyAccessible: !Ref PublicAccess
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup